## NOCOMPILER
%define copy_revision_file() \
  OLD_REV=0 \
  if [ -f %1 ] ; then OLD_REV=$(grep '^\s*#\s*CMSDIST_FILE_REVISION\s*=' %{1} | tail -1 | sed 's|.*=||;s| ||g') ; fi \
  NEW_REV=$(grep '^\s*#\s*CMSDIST_FILE_REVISION\s*=' %{2} | tail -1 | sed 's|.*=||;s| ||g') \
  if [ ${OLD_REV} -lt ${NEW_REV} ] ; then rm -f %1 ; cp %2 %1 ; fi

%if "%{?wmcore_packages:set}" != "set"
  %define wmcore_packages PSetTweaks Utils WMCore
%endif
%if "%{?crabserver_packages:set}" != "set"
  %define crabserver_packages PandaServerInterface.py RESTInteractions.py ServerUtilities.py
%endif
%if "%{?dbs_packages:set}" != "set"
  %define dbs_packages Client/src/python/dbs PycurlClient/src/python/RestClient
%endif

Source0: git://github.com/dmwm/CRABClient.git?obj=master/%{realversion}&export=CRABClient&output=/CRABClient-%{realversion}.tar.gz
Source1: git://github.com/dmwm/WMCore.git?obj=master/%{wmcore_version}&export=WMCore&output=/WMCore-%{wmcore_version}.tar.gz
Source2: git://github.com/dmwm/CRABServer.git?obj=master/%{crabserver_version}&export=CRABServer&output=/CRABServer-%{crabserver_version}.tar.gz
Source3: git://github.com/dmwm/DBS.git?obj=master/%{dbs_version}&export=DBS&output=/DBS-%{dbs_version}.tar.gz
#Needed for CRAB Python API
Source98: crab-proxy-package
#Crab startup script which finds latest crab client, sets env and run it
Source99: crab.sh

%prep
%setup -D -T -b 0 -n CRABClient
%setup -D -T -b 1 -n WMCore
%setup -D -T -b 2 -n CRABServer
%setup -D -T -b 3 -n DBS

%build

%install

mkdir -p %{i}/bin %{i}/lib %{i}/common

#List of CRAB python pakcages for which we need to create ProxyPackage symlink
ls %{_builddir}/CRABClient/src/python/*/__init__.py | sed 's|/__init__.py$||;s|.*/||' > %{i}/common/crab_pkgs.txt

#Copy CRABClient
rsync -a %{_builddir}/CRABClient/src/python/ %{i}/lib
sed -i -e 's|"development"|"%{realversion}"|' %{i}/lib/CRABClient/__init__.py
rsync -a %{_builddir}/CRABClient/bin/  %{i}/bin/

#Copy WMCore
for pkg in %{wmcore_packages} ; do
  if [ -d %{_builddir}/WMCore/src/python/${pkg} ] ; then
    rsync -a %{_builddir}/WMCore/src/python/${pkg} %{i}/lib/
  else
    cp %{_builddir}/WMCore/src/python/${pkg} %{i}/lib/${pkg}
  fi
done

#Copy CRABServer
for pkg in %{crabserver_packages} ; do
  if [ -d %{_builddir}/CRABServer/src/python/${pkg} ] ; then
    rsync -a %{_builddir}/CRABServer/src/python/${pkg} %{i}/lib/
  else
    cp %{_builddir}/CRABServer/src/python/${pkg} %{i}/lib/${pkg}
  fi
done

#Copy DBS
for pkg in %{dbs_packages} ; do
  if [ -d %{_builddir}/DBS/${pkg} ] ; then
    rsync -a %{_builddir}/DBS/${pkg} %{i}/lib/
  else
    cp %{_builddir}/DBS/${pkg} %{i}/lib/${pkg}
  fi
done

#Copy scripts needed for crab startup and api
cp %{_sourcedir}/crab-proxy-package %{i}/common/
cp %{_sourcedir}/crab.sh            %{i}/common/
chmod +x %{i}/common/crab.sh
sed -i -e 's|@CMS_PATH@|%{cmsroot}|g' %{i}/common/crab.sh
sed -i -e 's|@CMS_PATH@|%{cmsroot}|g' %{i}/common/crab-proxy-package

%post
%{relocateConfig}/common/crab.sh
%{relocateConfig}/common/crab-proxy-package

cd ${RPM_INSTALL_PREFIX}
mkdir -p share/%{pkgdir}
for dir in bin lib ; do rsync -a %{pkgrel}/${dir}/ share/%{pkgdir}/${dir}/ ; done
crab_common=share/%{pkgcategory}/crab-common/1.0
mkdir -p ${crab_common}/bin ${crab_common}/lib
for p in $(cat %{pkgrel}/common/crab_pkgs.txt); do
  mkdir -p ${crab_common}/lib/${p}
  rm -f ${crab_common}/lib/${p}/__init__.py*
  ln -s ../crab-proxy-package ${crab_common}/lib/${p}/__init__.py
done
%copy_revision_file ${crab_common}/bin/crab.sh            %{pkgrel}/common/crab.sh
%copy_revision_file ${crab_common}/lib/crab-proxy-package %{pkgrel}/common/crab-proxy-package
ls -d share/%{pkgcategory}/%{n}/*/bin/crab | sed -e 's|/bin/crab$||;s|.*/||' | sort -n | tail -1 > ${crab_common}/%{n}.latest

rm -f common/_crab-startup common/%{n}
ln -s ../${crab_common}/bin/crab.sh common/%{n}
