#!/bin/bash -e
#####################################################
# **************** IMPORTANT NOTE ***************** #
# Increament Crab Startup Revision for every change #
#####################################################
CRAB_STARTUP_REVISION=3

#Check if we have not already found CRAB
if [ -z "${CMS_CRAB_PATH}" ] ; then
  cms_basedir="$(dirname $(cd $(dirname $0); /bin/pwd -P))"

  #Use crab for crab-prob command
  crab_pkg=$(basename $0)
  if [ "${crab_pkg}" = "crab-prod" ] ; then crab_pkg="crab" ; fi
 
  #Search for latest crab version for cmsos 
  cms_os=$(${cms_basedir}/common/cmsos)
  crab_dir=$(ls -d ${cms_basedir}/${cms_os}_gcc*/cms/${crab_pkg}/*/etc/profile.d/init.sh 2>/dev/null | sed 's|/etc/profile.d/init.sh$||' | sort | tail -1)
  if [ -z "${crab_dir}" ] ; then
    >&2 echo "Error: Unable to find '${crab_pkg}' installation for '${cms_os}' architecture"
    exit 1
  fi
  export CMS_CRAB_PATH="${crab_dir}"
  export CRAB_VERSION=$(basename ${crab_dir})

  ## Unset cmssw env for non-submit crab commands
  if [ $(echo "$@" | tr ' ' '\n' | grep '^sub$\|^submit$' | wc -l) -eq 0 ] ; then
    eval `scram unset -sh`
  fi

  #set crab env
  source ${CMS_CRAB_PATH}/etc/profile.d/init.sh
 
  #If cjson not available then add crab/lib/extras
  if ! python -c 'import cjson' >/dev/null  2>&1 ; then
    export PYTHONPATH="${CMS_CRAB_PATH}/lib/extras${PYTHONPATH:+:$PYTHONPATH}"
  fi
fi

## Execute the client command in a pure COMP environment
ERR=0
${CMS_CRAB_PATH}/bin/crab "$@" || ERR=$?
exit $ERR
